{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Familia\\\\Desktop\\\\GradoAsistencia\\\\src\\\\components\\\\mapa\\\\Mapview.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Map, TileLayer } from \"leaflet\";\nimport data from \"../assets/data.json\";\nimport Markers from \"./VenueMarkers\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport \"leaflet/dist/leaflet.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MapView = props => {\n  _s();\n\n  const [state, setState] = useState({\n    currentLocation: {\n      lat: 4.6097100,\n      lng: -74.0817500\n    },\n    zoom: 13,\n    data\n  });\n  const location = useLocation();\n  const history = useHistory();\n  useEffect(() => {\n    if (location.state.latitude && location.state.longitude) {\n      const currentLocation = {\n        lat: location.state.latitude,\n        lng: location.state.longitude\n      };\n      console.log(state);\n      setState({ ...state,\n        data: {\n          venues: state.data.venues.concat({\n            name: \"new\",\n            geometry: [currentLocation.lat, currentLocation.lng]\n          })\n        },\n        currentLocation\n      });\n      history.replace({\n        pathname: \"/map\",\n        state: {}\n      });\n    }\n  }, [location]);\n  return /*#__PURE__*/_jsxDEV(Map, {\n    center: state.currentLocation,\n    zoom: state.zoom,\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Markers, {\n      venues: state.data.venues\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MapView, \"k6Q3jsy4PL8DOdD7l3ma/QgLLtI=\", false, function () {\n  return [useLocation, useHistory];\n});\n\n_c = MapView;\nexport default MapView;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"sources":["C:/Users/Familia/Desktop/GradoAsistencia/src/components/mapa/Mapview.js"],"names":["React","useState","useEffect","Map","TileLayer","data","Markers","useLocation","useHistory","MapView","props","state","setState","currentLocation","lat","lng","zoom","location","history","latitude","longitude","console","log","venues","concat","name","geometry","replace","pathname"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,SAAd,QAA+B,SAA/B;AAEA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AAEA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,kBAAxC;AAEA,OAAO,0BAAP;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC;AACjCY,IAAAA,eAAe,EAAE;AAAEC,MAAAA,GAAG,EAAE,SAAP;AAAkBC,MAAAA,GAAG,EAAE,CAAC;AAAxB,KADgB;AAEjCC,IAAAA,IAAI,EAAE,EAF2B;AAGjCX,IAAAA;AAHiC,GAAD,CAAlC;AAMA,QAAMY,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAMW,OAAO,GAAGV,UAAU,EAA1B;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIe,QAAQ,CAACN,KAAT,CAAeQ,QAAf,IAA2BF,QAAQ,CAACN,KAAT,CAAeS,SAA9C,EAAyD;AACvD,YAAMP,eAAe,GAAG;AACtBC,QAAAA,GAAG,EAAEG,QAAQ,CAACN,KAAT,CAAeQ,QADE;AAEtBJ,QAAAA,GAAG,EAAEE,QAAQ,CAACN,KAAT,CAAeS;AAFE,OAAxB;AAIAC,MAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AACAC,MAAAA,QAAQ,CAAC,EACP,GAAGD,KADI;AAEPN,QAAAA,IAAI,EAAE;AACJkB,UAAAA,MAAM,EAAEZ,KAAK,CAACN,IAAN,CAAWkB,MAAX,CAAkBC,MAAlB,CAAyB;AAC/BC,YAAAA,IAAI,EAAE,KADyB;AAE/BC,YAAAA,QAAQ,EAAE,CAACb,eAAe,CAACC,GAAjB,EAAsBD,eAAe,CAACE,GAAtC;AAFqB,WAAzB;AADJ,SAFC;AAQPF,QAAAA;AARO,OAAD,CAAR;AAUAK,MAAAA,OAAO,CAACS,OAAR,CAAgB;AACdC,QAAAA,QAAQ,EAAE,MADI;AAEdjB,QAAAA,KAAK,EAAE;AAFO,OAAhB;AAID;AACF,GAtBQ,EAsBN,CAACM,QAAD,CAtBM,CAAT;AAwBA,sBACE,QAAC,GAAD;AAAK,IAAA,MAAM,EAAEN,KAAK,CAACE,eAAnB;AAAoC,IAAA,IAAI,EAAEF,KAAK,CAACK,IAAhD;AAAA,4BACE,QAAC,SAAD;AACE,MAAA,GAAG,EAAC,oDADN;AAEE,MAAA,WAAW,EAAC;AAFd;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,OAAD;AAAS,MAAA,MAAM,EAAEL,KAAK,CAACN,IAAN,CAAWkB;AAA5B;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA3CD;;GAAMd,O;UAOaF,W,EACDC,U;;;KARZC,O;AA6CN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Map, TileLayer } from \"leaflet\";\r\n\r\nimport data from \"../assets/data.json\";\r\nimport Markers from \"./VenueMarkers\";\r\n\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\n\r\nimport \"leaflet/dist/leaflet.css\";\r\n\r\nconst MapView = (props) => {\r\n  const [state, setState] = useState({\r\n    currentLocation: { lat: 4.6097100, lng: -74.0817500 },\r\n    zoom: 13,\r\n    data,\r\n  });\r\n\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (location.state.latitude && location.state.longitude) {\r\n      const currentLocation = {\r\n        lat: location.state.latitude,\r\n        lng: location.state.longitude,\r\n      };\r\n      console.log(state);\r\n      setState({\r\n        ...state,\r\n        data: {\r\n          venues: state.data.venues.concat({\r\n            name: \"new\",\r\n            geometry: [currentLocation.lat, currentLocation.lng],\r\n          }),\r\n        },\r\n        currentLocation,\r\n      });\r\n      history.replace({\r\n        pathname: \"/map\",\r\n        state: {},\r\n      });\r\n    }\r\n  }, [location]);\r\n\r\n  return (\r\n    <Map center={state.currentLocation} zoom={state.zoom}>\r\n      <TileLayer\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n      />\r\n      <Markers venues={state.data.venues} />\r\n    </Map>\r\n  );\r\n};\r\n\r\nexport default MapView;"]},"metadata":{},"sourceType":"module"}